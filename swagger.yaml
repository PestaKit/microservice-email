swagger: '2.0'
info:
  version: 1.0.0
  title: microservice-email
  description: |
    Microservice to handle templates and send an email from a template.
    
    Find source code of this API [here](https://github.com/PestaKit/microservice-email)
host: localhost:8080
basePath: /email
schemes:
  - http
  - https
consumes:
  - application/json
  - application/xml
produces:
  - application/json
  - application/xml
paths:
  "/categories":
    get:
      tags:
        - category
      summary: Get categories list
      operationId: getCategories
      produces:
        - application/json
      parameters:
        - name: limit
          in: query
          description: Maximum of categories
          type: integer
          default: 10
          minimum: 10
          maximum: 10000
      responses:
        default:
          description: Get categories List
          schema:
            title: Categories
            type: array
            items:
              $ref: '#/definitions/Category'
    
    post:
      tags:
        - category
      summary: Create a category
      operationId: createCategory
      consumes:
        - application/json
      parameters:
        - name: category
          in: body
          description: Create a category
          schema:
            $ref: "#/definitions/Category"
          required: false
      responses:
        default:
          description: Category created
  
  "/categories/{categoryId}":
    put:
      tags:
        - category
      summary: Update an category
      operationId: updateCategory
      parameters:
        - name: categoryId
          in: path
          type: string
          description: ID of category 
          required: true
        - name: category
          in: body
          description: Category
          schema:
            $ref: '#/definitions/Category'
          required: true
      responses:
        200:
          description: Category updated
        400:
          description: Invalid category ID supplied
        404:
          description: Category not found
    
    patch:
      tags:
        - category
      summary: Update name of a category
      operationId: updateCategoryName
      parameters:
        - name: categoryId
          in: path
          type: string
          description: ID of category 
          required: true
        - name: categoryName
          in: body
          description: Name of categorie
          type: string
          required: true
      responses:
        200:
          description: Name of category updated
        400:
          description: Invalid category ID supplied
        404:
          description: Category not found
          
    delete:
      tags:
        - category
      summary: Delete a category
      operationId: deleteCategory
      parameters:
        - name: categoryId
          in: path
          type: string
          description: ID of category 
          required: true
      responses:
        200:
          description: Category deleted
        400:
          description: Invalid category ID supplied
        404:
          description: Category not found
  
  "/categories/{categoryId}/templates":
    get:
      tags:
        - template
      summary: Get templates list
      operationId: getTemplates
      produces:
        - application/json
      parameters:
        - name: categoryId
          in: path
          type: string
          description: ID of category
          required: true
        - name: limit
          in: query
          description: Maximum of templates
          type: integer
          default: 10
          minimum: 1
          maximum: 10000
      responses:
        200:
          description: Get templates List
          schema:
            title: Templates
            type: array
            items:
              $ref: '#/definitions/Template'
        400:
          description: Invalid category ID supplied
        404:
          description: Template not found
    
    post:
      tags:
        - template
      summary: Create a template
      operationId: createTemplate
      produces:
        - application/json
      parameters:
        - name: categoryId
          in: path
          type: string
          description: ID of category
          required: true
        - name: template
          in: body
          description: Template
          schema:
            $ref: "#/definitions/Template"
          required: false
      responses:
        default:
          description: Template created
  
  "/categories/{categoryId}/templates/{templateId}":
    get:
      tags:
        - template
      summary: Get a template
      operationId: getTemplate
      produces:
        - application/json
      parameters:
        - name: categoryId
          in: path
          type: string
          description: ID of category
          required: true
        - name: templateId
          in: path
          type: string
          description: ID of template
          required: true
      responses:
        200:
          description: Get a template
          schema:
            title: Template
            $ref: '#/definitions/Template'
        400:
          description: Invalid template ID or invalid category ID supplied
        404:
          description: Template not found
    
    post:
      tags:
        - template
      summary: Send an email
      operationId: sendEmail
      produces:
        - application/json
      parameters:
        - name: categoryId
          in: path
          type: string
          description: ID of category
          required: true
        - name: templateId
          in: path
          type: string
          description: ID of template
          required: true
        - name: template
          in: body
          description: Template
          schema:
            $ref: '#/definitions/Template'
          required: true
      responses:
        200:
          description: Email sended
        400:
          description: Invalid template ID or invalid category ID supplied
        404:
          description: Template not found
    put:
      tags:
        - template
      summary: Update an template
      operationId: updateTemplate
      parameters:
        - name: categoryId
          in: path
          type: string
          description: ID of category
          required: true
        - name: templateId
          in: path
          type: string
          description: ID of template
          required: true
        - name: template
          in: body
          description: Template
          schema:
            $ref: '#/definitions/Template'
          required: true
      responses:
        200:
          description: Template updated
        400:
          description: Invalid template ID or invalid category ID supplied
        404:
          description: Template not found
    
    patch:
      tags:
        - template
      summary: Update parameters of a template
      operationId: updateTemplateParameters
      parameters:
        - name: categoryId
          in: path
          type: string
          description: ID of category
          required: true
        - name: templateId
          in: path
          type: string
          description: ID of template
          required: true
        - name: parameters
          in: body
          description: Parameters of Template
          schema:
            title: Parameters
            type: array
            items:
              $ref: '#/definitions/Parameter'
          required: true
      responses:
        200:
          description: Template parameters updated
        400:
          description: Invalid template ID or invalid category ID supplied
        404:
          description: Template not found
    
    delete:
      tags:
        - template
      summary: Delete a template
      operationId: deleteTemplate
      parameters:
        - name: categoryId
          in: path
          type: string
          description: ID of category
          required: true
        - name: templateId
          in: path
          type: string
          description: ID of template
          required: true
      responses:
        200:
          description: Template deleted
        400:
          description: Invalid template ID or invalid category ID supplied
        404:
          description: Template not found
  
  "/categories/{categoryId}/templates/{templateId}/example":
    get:
      tags:
        - template
      summary: Get a template example
      operationId: getTemplateExample
      produces:
        - application/json
      parameters:
        - name: categoryId
          in: path
          type: string
          description: ID of category
          required: true
        - name: templateId
          in: path
          type: string
          description: ID of template
          required: true
      responses:
        200:
          description: Template example
          schema:
            title: Email
            type: string
        400:
          description: Invalid template ID or invalid category ID supplied
        404:
          description: Template not found

definitions:
  Category:
    type: object
    properties:
      url:
        type: string
      id:
        type: int64
      name:
        type: string
     
  Template:
    type: object
    properties:
      url:
        type: string
      id:
        type: int64
      name:
        type: string
      parameters:
        type: array
        items:
            $ref: '#/definitions/Parameter'
  
  Parameter:
    type: object
    properties:
      key:
        type: string
      value:
        type: string


swagger: '2.0'
info:
  version: '0.1.0'
  title: Email API
  description: An API handle templates and send an email using a template
host: localhost:8080
basePath: /api
schemes:
  - http
paths:
  /tags:
    post:
      summary: Create a tag
      operationId: createTag
      consumes:
        - application/json
      parameters:
        - name: tag
          in: body
          description: Create a tag
          schema:
            $ref: '#/definitions/Tag'
          required: true
      responses:
        '201':
          description: Tag created
          schema:
            type: object
    get:
      summary: Get tags list
      operationId: getTags
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            title: Tags
            type: array
            items:
              $ref: '#/definitions/Tag'

  /tags/{id}:
    get:
      summary: Get a tag
      operationId: getTag
      parameters:
        - name: id
          in: path
          type: integer
          format: int64
          description: tag ID
          required: true
      responses:
        '200':
          description: Tag geted
          schema:
            $ref: '#/definitions/Tag'
#    TODO: PUT
#    put:
#      summary: Update a tag
#      operationId: updateTag
#      parameters:
#        - name: id
#          in: path
#          type: string
#          description: tag ID
#          required: true
#        - name: tag
#          in: body
#          description: Tag
#          schema:
#            $ref: '#/definitions/Tag'
#          required: true
#      responses:
#        '200':
#          description: Tag updated
#    TODO: PATCH
#    patch:
#      summary: Update name of a tag
#      operationId: updateTagName
#      parameters:
#        - name: id
#          in: path
#          type: string
#          description: tag ID
#          required: true
#        - name: tagName
#          in: body
#          description: Name of tag
#          type: string
#          required: true
#      responses:
#        '200':
#          description: Name of tag updated
    delete:
      summary: Delete a tag
      operationId: deleteTag
      parameters:
        - name: id
          in: path
          type: integer
          format: int64
          description: tag ID
          required: true
      responses:
        '200':
          description: Tag deleted

  /templates:
    post:
      summary: Create a template
      operationId: createTemplate
      consumes:
        - application/json
      parameters:
        - name: template
          in: body
          description: Create a template
          required: true
          schema:
            $ref: '#/definitions/Template'
      responses:
        '201':
          description: Template created
          schema:
            type: object
    get:
      summary: Get templates list
      operationId: getTemplates
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            title: Templates
            type: array
            items:
              $ref: '#/definitions/Template'

  /templates/{id}:
    get:
      summary: Get a template
      operationId: getTemplate
      parameters:
        - name: id
          in: path
          type: integer
          format: int64
          description: template ID
          required: true
      responses:
        '200':
          description: Template geted
          schema:
            $ref: '#/definitions/Template'
    delete:
      summary: Delete a template
      operationId: deleteTemplate
      parameters:
        - name: id
          in: path
          type: integer
          format: int64
          description: template ID
          required: true
      responses:
        '200':
          description: Template deleted

  /emails:
    post:
      summary: Create an email
      operationId: createEmail
      consumes:
        - application/json
      parameters:
        - name: email
          in: body
          description: Create an email
          required: true
          schema:
            $ref: '#/definitions/EmailPrepared'
      responses:
        '201':
          description: Email created
          schema:
            type: object
    get:
      summary: Get emails list
      operationId: getEmails
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            title: Emails
            type: array
            items:
              $ref: '#/definitions/Email'

  /emails/{id}:
    get:
      summary: Get an email
      operationId: getEmail
      parameters:
        - name: id
          in: path
          type: integer
          format: int64
          description: email ID
          required: true
      responses:
        '200':
          description: Email geted
          schema:
            $ref: '#/definitions/Email'

definitions:
  Tag:
    type: object
    properties:
      url:
        type: string
      name:
        type: string
      templates:
        type: array
        items:
          type: string

  Template:
    type: object
    properties:
      url:
        type: string
      name:
        type: string
      tags:
        type: array
        items:
#         TODO: Voir comment utiliser une class ShortTag
          type: string
      parameters:
        type: array
        items:
          type: string
      body:
        type: string

  EmailPrepared:
    type: object
    properties:
      sender:
        type: string
      recipients:
        type: array
        items:
          type: string
      carbonCopy:
        type: array
        items:
          type: string
      blindCarbonCopy:
        type: array
        items:
          type: string
      subject:
        type: string
      template:
        type: string
      parameters:
        type: array
        items:
          $ref: '#/definitions/Parameter'

  Email:
    type: object
    properties:
      url:
        type: string
      sender:
        type: string
      recipients:
        type: array
        items:
          type: string
      carbonCopy:
        type: array
        items:
          type: string
      blindCarbonCopy:
        type: array
        items:
          type: string
      subject:
        type: string
      body:
        type: string

  Parameter:
    type: object
    properties:
      key:
        type: string
      value:
        type: string